{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","todoStore","JSON","parse","localStorage","getItem","setItem","stringify","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07aec3c6.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n\n    setInput('');\n  };\n\n  return (\n    <form className='todo-form' onSubmit={handleSubmit}>\n      {props.edit ? (\n      <>\n      <input \n      type='text' \n      placeholder='스케줄 수정' \n      value={input} \n      name='text' \n      className='todo-input edit'\n      onChange={handleChange}\n      ref={inputRef}\n      />\n      <button className='todo-button edit'>수정</button>\n      </>\n      ) : (\n      <>\n      <input \n        type='text' \n        placeholder='스케줄' \n        value={input} \n        name='text' \n        className='todo-input'\n        onChange={handleChange}\n        ref={inputRef}\n        />\n        <button className='todo-button'>추가</button>\n        </>\n        )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React,{useState} from 'react';\nimport TodoForm from './TodoForm';\nimport {RiCloseCircleLine} from 'react-icons/ri';\nimport {TiEdit} from 'react-icons/ti';\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n  const [edit, setEdit] = useState({\n    id:null,\n    value:''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value)\n    setEdit({\n      id:null,\n      value:''\n    });\n  }\n\n  if(edit.id){\n    return<TodoForm edit={edit} onSubmit={submitUpdate} />\n  }\n\n  return todos.map((todo, index) => (\n    <div className={\n      todo.isComplete ? 'todo-row complete' : 'todo-row'\n    } key={index}>\n      <div key={todo.id} onClick={\n        () => completeTodo(todo.id)\n        }>\n        {todo.text}\n      </div>\n      <div className='icons'>\n        <RiCloseCircleLine \n        onClick={() => removeTodo(todo.id)}\n        className='delete-icon'\n        />\n        <TiEdit \n        onClick={() => setEdit({ id:todo.id, value:todo.text})}\n        className='edit-icon'\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n","import React, {\n  useState, useEffect\n} from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const todoStore = JSON.parse(localStorage.getItem('todoStore'))\n    if(todoStore) setTodos(todoStore)\n  },[]);\n\n  useEffect(() => {\n    localStorage.setItem('todoStore', JSON.stringify(todos))\n  },[todos]);\n  \n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  }\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  }\n\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removeArr);\n  }\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n  \n  return ( \n  <div>\n    <h1 > 오늘의 스케줄</h1> \n    <TodoForm onSubmit = {\n      addTodo\n    }\n    /> \n    <Todo todos = {\n      todos\n    }\n    completeTodo = {\n      completeTodo\n    }\n    removeTodo = {\n      removeTodo\n    }\n    updateTodo = {\n      updateTodo\n    }\n    /> \n    </div>\n  );\n}\n\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}